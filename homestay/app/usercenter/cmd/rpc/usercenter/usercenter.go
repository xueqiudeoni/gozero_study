// Code generated by goctl. DO NOT EDIT.
// Source: usercenter.proto

package usercenter

import (
	"context"

	"homestay/app/usercenter/cmd/rpc/user_pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	GenTokenReq             = user_pb.GenTokenReq
	GenTokenResp            = user_pb.GenTokenResp
	GetUserAuthByUserIdReq  = user_pb.GetUserAuthByUserIdReq
	GetUserAuthByUserIdResp = user_pb.GetUserAuthByUserIdResp
	GetUserAuthKeyReq       = user_pb.GetUserAuthKeyReq
	GetUserAuthKeyResp      = user_pb.GetUserAuthKeyResp
	GetUserInfoReq          = user_pb.GetUserInfoReq
	GetUserInfoResp         = user_pb.GetUserInfoResp
	LoginReq                = user_pb.LoginReq
	LoginResp               = user_pb.LoginResp
	RegisterReq             = user_pb.RegisterReq
	RegisterResp            = user_pb.RegisterResp
	User                    = user_pb.User
	UserAuth                = user_pb.UserAuth

	Usercenter interface {
		Login(ctx context.Context, in *LoginReq, opts ...grpc.CallOption) (*LoginResp, error)
		Register(ctx context.Context, in *RegisterReq, opts ...grpc.CallOption) (*RegisterResp, error)
		GetUserInfo(ctx context.Context, in *GetUserInfoReq, opts ...grpc.CallOption) (*GetUserInfoResp, error)
		GetUserAuthKey(ctx context.Context, in *GetUserAuthKeyReq, opts ...grpc.CallOption) (*GetUserAuthKeyResp, error)
		GetUserAuthByUserId(ctx context.Context, in *GetUserAuthByUserIdReq, opts ...grpc.CallOption) (*GetUserAuthByUserIdResp, error)
		GenToken(ctx context.Context, in *GenTokenReq, opts ...grpc.CallOption) (*GenTokenResp, error)
	}

	defaultUsercenter struct {
		cli zrpc.Client
	}
)

func NewUsercenter(cli zrpc.Client) Usercenter {
	return &defaultUsercenter{
		cli: cli,
	}
}

func (m *defaultUsercenter) Login(ctx context.Context, in *LoginReq, opts ...grpc.CallOption) (*LoginResp, error) {
	client := user_pb.NewUsercenterClient(m.cli.Conn())
	return client.Login(ctx, in, opts...)
}

func (m *defaultUsercenter) Register(ctx context.Context, in *RegisterReq, opts ...grpc.CallOption) (*RegisterResp, error) {
	client := user_pb.NewUsercenterClient(m.cli.Conn())
	return client.Register(ctx, in, opts...)
}

func (m *defaultUsercenter) GetUserInfo(ctx context.Context, in *GetUserInfoReq, opts ...grpc.CallOption) (*GetUserInfoResp, error) {
	client := user_pb.NewUsercenterClient(m.cli.Conn())
	return client.GetUserInfo(ctx, in, opts...)
}

func (m *defaultUsercenter) GetUserAuthKey(ctx context.Context, in *GetUserAuthKeyReq, opts ...grpc.CallOption) (*GetUserAuthKeyResp, error) {
	client := user_pb.NewUsercenterClient(m.cli.Conn())
	return client.GetUserAuthKey(ctx, in, opts...)
}

func (m *defaultUsercenter) GetUserAuthByUserId(ctx context.Context, in *GetUserAuthByUserIdReq, opts ...grpc.CallOption) (*GetUserAuthByUserIdResp, error) {
	client := user_pb.NewUsercenterClient(m.cli.Conn())
	return client.GetUserAuthByUserId(ctx, in, opts...)
}

func (m *defaultUsercenter) GenToken(ctx context.Context, in *GenTokenReq, opts ...grpc.CallOption) (*GenTokenResp, error) {
	client := user_pb.NewUsercenterClient(m.cli.Conn())
	return client.GenToken(ctx, in, opts...)
}
